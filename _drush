#compdef drush
#autoload

local ret=1 state

local -a _1st_arguments
local -a drush_commands
drush_commands=`drush zsh-commands --pipe`

local -a drush_common_args
drush_common_args=`drush zsh-options --pipe`

local expl

declare -ga common_args
common_args=(${(f)drush_common_args})

typeset -A opt_args
_arguments \
  $common_args \
  ':subcommand:->subcommand' \
  '*::options:->options' && ret=0
  
case $state in
  subcommand)
    subcommands=(${(f)drush_commands})
    _describe -t subcommands 'drush subcommand' subcommands && ret=0
    ;;
  
  options)
    declare -a args
    declare -a local_args
    declare -a drush_local_args
    
    drush_local_args=`drush zsh-options --pipe $words[1]`
    local_args=(${(f)drush_local_args})
    
    args=(
      $common_args
      $local_args
    )

    case $words[1] in
      features-update|fu|feature-revert|fr)
        declare -a drush_features
        declare -a local_features 
        drush_features=`drush zsh-features-list --pipe`
        local_features={$drush_features}
        
        args+=(
          '*:feature:('$local_features')'
        )
        ;;
    esac
    
    _arguments $args && ret=0
    ;;
esac

return ret
 